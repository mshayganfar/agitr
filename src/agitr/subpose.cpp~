#include <ros/ros.h>
#include <turtlesim/Pose.h>
#include <iomanip>

void poseMessageReceived(const turtlesim::Pose& msg) {
  ROS_INFO_STREAM(std::setprecision(2) << std::fixed << "position=(" << msg.x << "," << msg.y << ")" << " direction=" << msg.theta);
}

int main(int argc, char **argv) {
  ros::init(argc, argv, "subscribe_to_pose");
  ros::NodeHandle nh;

  ros::Subscriber sub = nh.subscribe("turtle1/pose", 1000, &poseMessageReceived);

  while (ros::ok()) {
    geometry_msgs::Twist msg;
    msg.linear.x  = double(rand())/double(RAND_MAX);
    msg.angular.z = 2*double(rand())/double(RAND_MAX) - 1;

    pub.publish(msg);

    rate.sleep();
  }
}
